/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_reconinstruments_reconble_BLENative */

#ifndef _Included_com_reconinstruments_reconble_BLENative
#define _Included_com_reconinstruments_reconble_BLENative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    openDevice
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_openDevice
  (JNIEnv *, jclass);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    closeDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_closeDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    resetDevice
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_resetDevice
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    setMaster
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_setMaster
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    setSlave
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_setSlave
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    pairMaster
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_pairMaster
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getMasterList
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getMasterList
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    bondMaster
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_bondMaster
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    newSearch
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_newSearch
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    unpairMaster
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_unpairMaster
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    unpairSlave
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_unpairSlave
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    slaveRequestSecurity
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_slaveRequestSecurity
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getIrk
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getIrk
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getMiscData
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getMiscData
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    pairWithSlave
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_pairWithSlave
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    pairWithMaster
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_pairWithMaster
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    checkStatus
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_checkStatus
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    flushBuffers
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_flushBuffers
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    beginTransmission
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_beginTransmission
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    sendData
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_sendData
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    endTransmission
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_endTransmission
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    startReceive
 * Signature: (IZ)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_startReceive
  (JNIEnv *, jclass, jint, jboolean);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    receiveData
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_receiveData
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    setSendPriority
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_setSendPriority
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getCurrentSendPriority
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getCurrentSendPriority
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getCurrentReceivePriority
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getCurrentReceivePriority
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getSendOrReceiveMode
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getSendOrReceiveMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    sendAck
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_sendAck
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    resetRemote
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_resetRemote
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getOwnMac
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getOwnMac
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    getRemoteMac
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_getRemoteMac
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    telliOSToClear
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_telliOSToClear
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    sendControlByte
 * Signature: (IB)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_sendControlByte
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    sendSpecialCommand
 * Signature: (IB)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_sendSpecialCommand
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    newCheckStatus
 * Signature: (II[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_newCheckStatus
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     com_reconinstruments_reconble_BLENative
 * Method:    noninvasiveCheckStatus
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_reconinstruments_reconble_BLENative_noninvasiveCheckStatus
  (JNIEnv *, jclass, jint, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
